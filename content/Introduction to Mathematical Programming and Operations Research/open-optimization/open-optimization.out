\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{Notation}{chapter.1}% 2
\BOOKMARK [-1][-]{part.1}{I Introduction to Optimization}{}% 3
\BOOKMARK [0][-]{chapter.2}{Mathematical Programming}{part.1}% 4
\BOOKMARK [1][-]{section.2.1}{Linear Programming \(LP\)}{chapter.2}% 5
\BOOKMARK [1][-]{section.2.2}{Mixed-Integer Linear Programming \(MILP\)}{chapter.2}% 6
\BOOKMARK [1][-]{section.2.3}{Non-Linear Programming \(NLP\)}{chapter.2}% 7
\BOOKMARK [2][-]{subsection.2.3.1}{Convex Programming}{section.2.3}% 8
\BOOKMARK [2][-]{subsection.2.3.2}{Non-Convex Non-linear Programming}{section.2.3}% 9
\BOOKMARK [1][-]{section.2.4}{Mixed-Integer Non-Linear Programming \(MINLP\)}{chapter.2}% 10
\BOOKMARK [2][-]{subsection.2.4.1}{Convex Mixed-Integer Non-Linear Programming}{section.2.4}% 11
\BOOKMARK [2][-]{subsection.2.4.2}{Non-Convex Mixed-Integer Non-Linear Programming}{section.2.4}% 12
\BOOKMARK [1][-]{section.2.5}{Models}{chapter.2}% 13
\BOOKMARK [2][-]{subsection.2.5.1}{INFORMS Studies}{section.2.5}% 14
\BOOKMARK [2][-]{subsection.2.5.2}{Employee Training Program}{section.2.5}% 15
\BOOKMARK [2][-]{subsection.2.5.3}{Media Selection Program}{section.2.5}% 16
\BOOKMARK [2][-]{subsection.2.5.4}{Diet Problem}{section.2.5}% 17
\BOOKMARK [2][-]{subsection.2.5.5}{Farm Planning Problem}{section.2.5}% 18
\BOOKMARK [2][-]{subsection.2.5.6}{Pooling Problem}{section.2.5}% 19
\BOOKMARK [0][-]{chapter.3}{Algorithms and Complexity}{part.1}% 20
\BOOKMARK [1][-]{section.3.1}{Big-O Notation}{chapter.3}% 21
\BOOKMARK [1][-]{section.3.2}{Algorithms - Example with Bubble Sort}{chapter.3}% 22
\BOOKMARK [2][-]{subsection.3.2.1}{Sorting }{section.3.2}% 23
\BOOKMARK [1][-]{section.3.3}{Complexity Classes}{chapter.3}% 24
\BOOKMARK [2][-]{subsection.3.3.1}{P}{section.3.3}% 25
\BOOKMARK [2][-]{subsection.3.3.2}{NP}{section.3.3}% 26
\BOOKMARK [2][-]{subsection.3.3.3}{NP-Hard}{section.3.3}% 27
\BOOKMARK [2][-]{subsection.3.3.4}{NP-Complete}{section.3.3}% 28
\BOOKMARK [1][-]{section.3.4}{Relevant Terminology}{chapter.3}% 29
\BOOKMARK [1][-]{section.3.5}{Matching Problem}{chapter.3}% 30
\BOOKMARK [2][-]{subsection.3.5.1}{Greedy Algorithm for Maximal Matching}{section.3.5}% 31
\BOOKMARK [2][-]{subsection.3.5.2}{Other algorithms to look at}{section.3.5}% 32
\BOOKMARK [1][-]{section.3.6}{Minimum Spanning Tree}{chapter.3}% 33
\BOOKMARK [2][-]{subsection.3.6.1}{Kruskal's algorithm}{section.3.6}% 34
\BOOKMARK [2][-]{subsection.3.6.2}{Prim's Algorithm}{section.3.6}% 35
\BOOKMARK [1][-]{section.3.7}{Traveling Salesman Problem}{chapter.3}% 36
\BOOKMARK [2][-]{subsection.3.7.1}{Nearest Neighbor - Construction Heuristic}{section.3.7}% 37
\BOOKMARK [2][-]{subsection.3.7.2}{Double Spanning Tree - 2-Apx}{section.3.7}% 38
\BOOKMARK [2][-]{subsection.3.7.3}{Christofides - Approximation Algorithm - \(3/2\)-Apx}{section.3.7}% 39
\BOOKMARK [0][-]{chapter.4}{Integer Programming Formulations}{part.1}% 40
\BOOKMARK [1][-]{section.4.1}{Knapsack Problem}{chapter.4}% 41
\BOOKMARK [1][-]{section.4.2}{Set Covering}{chapter.4}% 42
\BOOKMARK [1][-]{section.4.3}{Machine Assignment}{chapter.4}% 43
\BOOKMARK [1][-]{section.4.4}{Facility Location}{chapter.4}% 44
\BOOKMARK [2][-]{subsection.4.4.1}{Capacitated Facility Location}{section.4.4}% 45
\BOOKMARK [2][-]{subsection.4.4.2}{Uncapacitated Facility Location}{section.4.4}% 46
\BOOKMARK [1][-]{section.4.5}{Capital Budgeting}{chapter.4}% 47
\BOOKMARK [1][-]{section.4.6}{Network Flow}{chapter.4}% 48
\BOOKMARK [1][-]{section.4.7}{Transportation Problem}{chapter.4}% 49
\BOOKMARK [2][-]{subsection.4.7.1}{Modeling Tricks}{section.4.7}% 50
\BOOKMARK [2][-]{subsection.4.7.2}{Either Or Constraints}{section.4.7}% 51
\BOOKMARK [2][-]{subsection.4.7.3}{Binary reformulation of integer variables}{section.4.7}% 52
\BOOKMARK [2][-]{subsection.4.7.4}{SOS1 Constraints}{section.4.7}% 53
\BOOKMARK [2][-]{subsection.4.7.5}{SOS2 Constraints}{section.4.7}% 54
\BOOKMARK [2][-]{subsection.4.7.6}{Piecewise linear functions with SOS2 constraint}{section.4.7}% 55
\BOOKMARK [2][-]{subsection.4.7.7}{Maximizing a minimum}{section.4.7}% 56
\BOOKMARK [2][-]{subsection.4.7.8}{Relaxing \(nonlinear\) equality constraints}{section.4.7}% 57
\BOOKMARK [1][-]{section.4.8}{Notes from AIMMS modeling book.}{chapter.4}% 58
\BOOKMARK [2][-]{subsection.4.8.1}{Guidelines for Integer Programming Modeling}{section.4.8}% 59
\BOOKMARK [2][-]{subsection.4.8.2}{Linear Programming Modeling}{section.4.8}% 60
\BOOKMARK [2][-]{subsection.4.8.3}{From AIMMS}{section.4.8}% 61
\BOOKMARK [2][-]{subsection.4.8.4}{Further Topics}{section.4.8}% 62
\BOOKMARK [0][-]{chapter.5}{Exponential Size Integer Programming Formulations}{part.1}% 63
\BOOKMARK [1][-]{section.5.1}{Cutting Stock}{chapter.5}% 64
\BOOKMARK [2][-]{subsection.5.1.1}{Pattern formulation}{section.5.1}% 65
\BOOKMARK [2][-]{subsection.5.1.2}{Column Generation}{section.5.1}% 66
\BOOKMARK [2][-]{subsection.5.1.3}{Cutting Stock - Multiple widths}{section.5.1}% 67
\BOOKMARK [1][-]{section.5.2}{Spanning Trees}{chapter.5}% 68
\BOOKMARK [1][-]{section.5.3}{Traveling Salesman Problem}{chapter.5}% 69
\BOOKMARK [2][-]{subsection.5.3.1}{Dantzig-Fulkerson-Johnson Model}{section.5.3}% 70
\BOOKMARK [2][-]{subsection.5.3.2}{Traveling Salesman Problem - Branching Solution}{section.5.3}% 71
\BOOKMARK [1][-]{section.5.4}{Google maps data}{chapter.5}% 72
\BOOKMARK [1][-]{section.5.5}{Literature}{chapter.5}% 73
\BOOKMARK [0][-]{chapter.6}{Algorithms to Solve Integer Programs}{part.1}% 74
\BOOKMARK [1][-]{section.6.1}{LP to solve IP}{chapter.6}% 75
\BOOKMARK [2][-]{subsection.6.1.1}{Rounding LP Solution can be bad!}{section.6.1}% 76
\BOOKMARK [2][-]{subsection.6.1.2}{Rounding LP solution can be infeasible!}{section.6.1}% 77
\BOOKMARK [2][-]{subsection.6.1.3}{Fractional Knapsack}{section.6.1}% 78
\BOOKMARK [1][-]{section.6.2}{Branch and Bound}{chapter.6}% 79
\BOOKMARK [2][-]{subsection.6.2.1}{Algorithm}{section.6.2}% 80
\BOOKMARK [2][-]{subsection.6.2.2}{General Branching}{section.6.2}% 81
\BOOKMARK [2][-]{subsection.6.2.3}{Knapsack Problem and 0/1 branching}{section.6.2}% 82
\BOOKMARK [2][-]{subsection.6.2.4}{Traveling Salesman Problem solution via Branching}{section.6.2}% 83
\BOOKMARK [1][-]{section.6.3}{Cutting Planes}{chapter.6}% 84
\BOOKMARK [2][-]{subsection.6.3.1}{Chv\341tal Cuts}{section.6.3}% 85
\BOOKMARK [2][-]{subsection.6.3.2}{Gomory Cuts}{section.6.3}% 86
\BOOKMARK [2][-]{subsection.6.3.3}{Fun with cutting planes}{section.6.3}% 87
\BOOKMARK [1][-]{section.6.4}{Branching Rules}{chapter.6}% 88
\BOOKMARK [1][-]{section.6.5}{Lagrangian Relaxation for Branch and Bound}{chapter.6}% 89
\BOOKMARK [1][-]{section.6.6}{Literature}{chapter.6}% 90
\BOOKMARK [0][-]{chapter.7}{Non-linear Programming \(NLP\)}{part.1}% 91
\BOOKMARK [1][-]{section.7.1}{Convex Sets}{chapter.7}% 92
\BOOKMARK [1][-]{section.7.2}{Convex Functions}{chapter.7}% 93
\BOOKMARK [2][-]{subsection.7.2.1}{Proving Convexity - Characterizations}{section.7.2}% 94
\BOOKMARK [2][-]{subsection.7.2.2}{Proving Convexity - Composition Tricks}{section.7.2}% 95
\BOOKMARK [1][-]{section.7.3}{Convex Optimization Examples}{chapter.7}% 96
\BOOKMARK [2][-]{subsection.7.3.1}{Unconstrained Optimization: Linear Regression}{section.7.3}% 97
\BOOKMARK [1][-]{section.7.4}{Machine Learning - SVM}{chapter.7}% 98
\BOOKMARK [2][-]{subsection.7.4.1}{SVM with non-linear separators}{section.7.4}% 99
\BOOKMARK [2][-]{subsection.7.4.2}{Support Vector Machines}{section.7.4}% 100
\BOOKMARK [1][-]{section.7.5}{Classification}{chapter.7}% 101
\BOOKMARK [2][-]{subsection.7.5.1}{Machine Learning}{section.7.5}% 102
\BOOKMARK [2][-]{subsection.7.5.2}{Neural Networks}{section.7.5}% 103
\BOOKMARK [1][-]{section.7.6}{Box Volume Optimization in Scipy.Minimize}{chapter.7}% 104
\BOOKMARK [1][-]{section.7.7}{Modeling}{chapter.7}% 105
\BOOKMARK [2][-]{subsection.7.7.1}{Minimum distance to circles}{section.7.7}% 106
\BOOKMARK [1][-]{section.7.8}{Machine Learning}{chapter.7}% 107
\BOOKMARK [1][-]{section.7.9}{Machine Learning - Supervised Learning - Regression}{chapter.7}% 108
\BOOKMARK [1][-]{section.7.10}{Machine learning - Supervised Learning - Classification}{chapter.7}% 109
\BOOKMARK [2][-]{subsection.7.10.1}{Python SGD implementation and video}{section.7.10}% 110
\BOOKMARK [0][-]{chapter.8}{NLP Algorithms}{part.1}% 111
\BOOKMARK [1][-]{section.8.1}{Algorithms Introduction}{chapter.8}% 112
\BOOKMARK [1][-]{section.8.2}{1-Dimensional Algorithms}{chapter.8}% 113
\BOOKMARK [2][-]{subsection.8.2.1}{Golden Search Method - Derivative Free Algorithm}{section.8.2}% 114
\BOOKMARK [2][-]{subsection.8.2.2}{Bisection Method - 1st Order Method \(using Derivative\)}{section.8.2}% 115
\BOOKMARK [2][-]{subsection.8.2.3}{Gradient Descent - 1st Order Method \(using Derivative\)}{section.8.2}% 116
\BOOKMARK [2][-]{subsection.8.2.4}{Newton's Method - 2nd Order Method \(using Derivative and Hessian\)}{section.8.2}% 117
\BOOKMARK [1][-]{section.8.3}{Multi-Variate Unconstrained Optimizaition}{chapter.8}% 118
\BOOKMARK [2][-]{subsection.8.3.1}{Descent Methods - Unconstrained Optimization - Gradient, Newton}{section.8.3}% 119
\BOOKMARK [2][-]{subsection.8.3.2}{Stochastic Gradient Descent - The mother of all algorithms.}{section.8.3}% 120
\BOOKMARK [1][-]{section.8.4}{Constrained Convex Nonlinear Programming}{chapter.8}% 121
\BOOKMARK [2][-]{subsection.8.4.1}{Barrier Method}{section.8.4}% 122
\BOOKMARK [0][-]{chapter.9}{Computational Issues with NLP}{part.1}% 123
\BOOKMARK [1][-]{section.9.1}{Irrational Solutions}{chapter.9}% 124
\BOOKMARK [1][-]{section.9.2}{Discrete Solutions}{chapter.9}% 125
\BOOKMARK [1][-]{section.9.3}{Convex NLP Harder than LP}{chapter.9}% 126
\BOOKMARK [1][-]{section.9.4}{NLP is harder than IP}{chapter.9}% 127
\BOOKMARK [1][-]{section.9.5}{Karush-Huhn-Tucker \(KKT\) Conditions}{chapter.9}% 128
\BOOKMARK [1][-]{section.9.6}{Gradient Free Algorithms}{chapter.9}% 129
\BOOKMARK [2][-]{subsection.9.6.1}{Needler-Mead}{section.9.6}% 130
\BOOKMARK [0][-]{chapter.10}{Material to add...}{part.1}% 131
\BOOKMARK [1][-]{subsection.10.0.1}{Bisection Method and Newton's Method}{chapter.10}% 132
\BOOKMARK [1][-]{section.10.1}{Gradient Descent}{chapter.10}% 133
\BOOKMARK [1][-]{section.10.2}{Projection Gradient Methods}{chapter.10}% 134
