\BOOKMARK [1][-]{section.0.1}{Notation}{}% 1
\BOOKMARK [-1][-]{part.1}{I Introduction to Optimization}{}% 2
\BOOKMARK [0][-]{chapter.1}{Mathematical Programming}{part.1}% 3
\BOOKMARK [1][-]{section.1.1}{Linear Programming \(LP\)}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.2}{Mixed-Integer Linear Programming \(MILP\)}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.3}{Non-Linear Programming \(NLP\)}{chapter.1}% 6
\BOOKMARK [2][-]{subsection.1.3.1}{Convex Programming}{section.1.3}% 7
\BOOKMARK [2][-]{subsection.1.3.2}{Non-Convex Non-linear Programming}{section.1.3}% 8
\BOOKMARK [1][-]{section.1.4}{Mixed-Integer Non-Linear Programming \(MINLP\)}{chapter.1}% 9
\BOOKMARK [2][-]{subsection.1.4.1}{Convex Mixed-Integer Non-Linear Programming}{section.1.4}% 10
\BOOKMARK [2][-]{subsection.1.4.2}{Non-Convex Mixed-Integer Non-Linear Programming}{section.1.4}% 11
\BOOKMARK [1][-]{section.1.5}{Models}{chapter.1}% 12
\BOOKMARK [2][-]{subsection.1.5.1}{INFORMS Studies}{section.1.5}% 13
\BOOKMARK [2][-]{subsection.1.5.2}{Employee Training Program}{section.1.5}% 14
\BOOKMARK [2][-]{subsection.1.5.3}{Media Selection Program}{section.1.5}% 15
\BOOKMARK [2][-]{subsection.1.5.4}{Diet Problem}{section.1.5}% 16
\BOOKMARK [2][-]{subsection.1.5.5}{Farm Planning Problem}{section.1.5}% 17
\BOOKMARK [2][-]{subsection.1.5.6}{Pooling Problem}{section.1.5}% 18
\BOOKMARK [0][-]{chapter.2}{Algorithms and Complexity}{part.1}% 19
\BOOKMARK [1][-]{section.2.1}{Big-O Notation}{chapter.2}% 20
\BOOKMARK [1][-]{section.2.2}{Algorithms - Example with Bubble Sort}{chapter.2}% 21
\BOOKMARK [2][-]{subsection.2.2.1}{Sorting }{section.2.2}% 22
\BOOKMARK [1][-]{section.2.3}{Complexity Classes}{chapter.2}% 23
\BOOKMARK [2][-]{subsection.2.3.1}{P}{section.2.3}% 24
\BOOKMARK [2][-]{subsection.2.3.2}{NP}{section.2.3}% 25
\BOOKMARK [2][-]{subsection.2.3.3}{NP-Hard}{section.2.3}% 26
\BOOKMARK [2][-]{subsection.2.3.4}{NP-Complete}{section.2.3}% 27
\BOOKMARK [1][-]{section.2.4}{Relevant Terminology}{chapter.2}% 28
\BOOKMARK [1][-]{section.2.5}{Matching Problem}{chapter.2}% 29
\BOOKMARK [2][-]{subsection.2.5.1}{Greedy Algorithm for Maximal Matching}{section.2.5}% 30
\BOOKMARK [2][-]{subsection.2.5.2}{Other algorithms to look at}{section.2.5}% 31
\BOOKMARK [1][-]{section.2.6}{Minimum Spanning Tree}{chapter.2}% 32
\BOOKMARK [2][-]{subsection.2.6.1}{Kruskal's algorithm}{section.2.6}% 33
\BOOKMARK [2][-]{subsection.2.6.2}{Prim's Algorithm}{section.2.6}% 34
\BOOKMARK [1][-]{section.2.7}{Traveling Salesman Problem}{chapter.2}% 35
\BOOKMARK [2][-]{subsection.2.7.1}{Nearest Neighbor - Construction Heuristic}{section.2.7}% 36
\BOOKMARK [2][-]{subsection.2.7.2}{Double Spanning Tree - 2-Apx}{section.2.7}% 37
\BOOKMARK [2][-]{subsection.2.7.3}{Christofides - Approximation Algorithm - \(3/2\)-Apx}{section.2.7}% 38
\BOOKMARK [0][-]{chapter.3}{Integer Programming Formulations}{part.1}% 39
\BOOKMARK [1][-]{section.3.1}{Knapsack Problem}{chapter.3}% 40
\BOOKMARK [1][-]{section.3.2}{Set Covering}{chapter.3}% 41
\BOOKMARK [1][-]{section.3.3}{Machine Assignment}{chapter.3}% 42
\BOOKMARK [1][-]{section.3.4}{Facility Location}{chapter.3}% 43
\BOOKMARK [2][-]{subsection.3.4.1}{Capacitated Facility Location}{section.3.4}% 44
\BOOKMARK [2][-]{subsection.3.4.2}{Uncapacitated Facility Location}{section.3.4}% 45
\BOOKMARK [1][-]{section.3.5}{Capital Budgeting}{chapter.3}% 46
\BOOKMARK [1][-]{section.3.6}{Network Flow}{chapter.3}% 47
\BOOKMARK [1][-]{section.3.7}{Transportation Problem}{chapter.3}% 48
\BOOKMARK [2][-]{subsection.3.7.1}{Modeling Tricks}{section.3.7}% 49
\BOOKMARK [2][-]{subsection.3.7.2}{Either Or Constraints}{section.3.7}% 50
\BOOKMARK [2][-]{subsection.3.7.3}{Binary reformulation of integer variables}{section.3.7}% 51
\BOOKMARK [2][-]{subsection.3.7.4}{SOS1 Constraints}{section.3.7}% 52
\BOOKMARK [2][-]{subsection.3.7.5}{SOS2 Constraints}{section.3.7}% 53
\BOOKMARK [2][-]{subsection.3.7.6}{Piecewise linear functions with SOS2 constraint}{section.3.7}% 54
\BOOKMARK [2][-]{subsection.3.7.7}{Maximizing a minimum}{section.3.7}% 55
\BOOKMARK [2][-]{subsection.3.7.8}{Relaxing \(nonlinear\) equality constraints}{section.3.7}% 56
\BOOKMARK [1][-]{section.3.8}{Notes from AIMMS modeling book.}{chapter.3}% 57
\BOOKMARK [2][-]{subsection.3.8.1}{Guidelines for Integer Programming Modeling}{section.3.8}% 58
\BOOKMARK [2][-]{subsection.3.8.2}{Linear Programming Modeling}{section.3.8}% 59
\BOOKMARK [2][-]{subsection.3.8.3}{From AIMMS}{section.3.8}% 60
\BOOKMARK [2][-]{subsection.3.8.4}{Further Topics}{section.3.8}% 61
\BOOKMARK [0][-]{chapter.4}{Exponential Size Integer Programming Formulations}{part.1}% 62
\BOOKMARK [1][-]{section.4.1}{Cutting Stock}{chapter.4}% 63
\BOOKMARK [2][-]{subsection.4.1.1}{Pattern formulation}{section.4.1}% 64
\BOOKMARK [2][-]{subsection.4.1.2}{Column Generation}{section.4.1}% 65
\BOOKMARK [2][-]{subsection.4.1.3}{Cutting Stock - Multiple widths}{section.4.1}% 66
\BOOKMARK [1][-]{section.4.2}{Spanning Trees}{chapter.4}% 67
\BOOKMARK [1][-]{section.4.3}{Traveling Salesman Problem}{chapter.4}% 68
\BOOKMARK [2][-]{subsection.4.3.1}{Dantzig-Fulkerson-Johnson Model}{section.4.3}% 69
\BOOKMARK [2][-]{subsection.4.3.2}{Traveling Salesman Problem - Branching Solution}{section.4.3}% 70
\BOOKMARK [1][-]{section.4.4}{Google maps data}{chapter.4}% 71
\BOOKMARK [1][-]{section.4.5}{Literature}{chapter.4}% 72
\BOOKMARK [0][-]{chapter.5}{Algorithms to Solve Integer Programs}{part.1}% 73
\BOOKMARK [1][-]{section.5.1}{LP to solve IP}{chapter.5}% 74
\BOOKMARK [2][-]{subsection.5.1.1}{Rounding LP Solution can be bad!}{section.5.1}% 75
\BOOKMARK [2][-]{subsection.5.1.2}{Rounding LP solution can be infeasible!}{section.5.1}% 76
\BOOKMARK [2][-]{subsection.5.1.3}{Fractional Knapsack}{section.5.1}% 77
\BOOKMARK [1][-]{section.5.2}{Branch and Bound}{chapter.5}% 78
\BOOKMARK [2][-]{subsection.5.2.1}{Algorithm}{section.5.2}% 79
\BOOKMARK [2][-]{subsection.5.2.2}{General Branching}{section.5.2}% 80
\BOOKMARK [2][-]{subsection.5.2.3}{Knapsack Problem and 0/1 branching}{section.5.2}% 81
\BOOKMARK [2][-]{subsection.5.2.4}{Traveling Salesman Problem solution via Branching}{section.5.2}% 82
\BOOKMARK [1][-]{section.5.3}{Cutting Planes}{chapter.5}% 83
\BOOKMARK [2][-]{subsection.5.3.1}{Chv\341tal Cuts}{section.5.3}% 84
\BOOKMARK [2][-]{subsection.5.3.2}{Gomory Cuts}{section.5.3}% 85
\BOOKMARK [1][-]{section.5.4}{Branching Rules}{chapter.5}% 86
\BOOKMARK [1][-]{section.5.5}{Lagrangian Relaxation for Branch and Bound}{chapter.5}% 87
\BOOKMARK [1][-]{section.5.6}{Literature}{chapter.5}% 88
\BOOKMARK [0][-]{chapter.6}{Non-linear Programming \(NLP\)}{part.1}% 89
\BOOKMARK [1][-]{section.6.1}{Convex Sets}{chapter.6}% 90
\BOOKMARK [1][-]{section.6.2}{Convex Functions}{chapter.6}% 91
\BOOKMARK [2][-]{subsection.6.2.1}{Proving Convexity - Characterizations}{section.6.2}% 92
\BOOKMARK [2][-]{subsection.6.2.2}{Proving Convexity - Composition Tricks}{section.6.2}% 93
\BOOKMARK [1][-]{section.6.3}{Convex Optimization Examples}{chapter.6}% 94
\BOOKMARK [2][-]{subsection.6.3.1}{Unconstrained Optimization: Linear Regression}{section.6.3}% 95
\BOOKMARK [1][-]{section.6.4}{Machine Learning - SVM}{chapter.6}% 96
\BOOKMARK [2][-]{subsection.6.4.1}{SVM with non-linear separators}{section.6.4}% 97
\BOOKMARK [2][-]{subsection.6.4.2}{Support Vector Machines}{section.6.4}% 98
\BOOKMARK [1][-]{section.6.5}{Classification}{chapter.6}% 99
\BOOKMARK [2][-]{subsection.6.5.1}{Machine Learning}{section.6.5}% 100
\BOOKMARK [2][-]{subsection.6.5.2}{Neural Networks}{section.6.5}% 101
\BOOKMARK [1][-]{section.6.6}{Box Volume Optimization in Scipy.Minimize}{chapter.6}% 102
\BOOKMARK [1][-]{section.6.7}{Modeling}{chapter.6}% 103
\BOOKMARK [2][-]{subsection.6.7.1}{Minimum distance to circles}{section.6.7}% 104
\BOOKMARK [1][-]{section.6.8}{Machine Learning}{chapter.6}% 105
\BOOKMARK [1][-]{section.6.9}{Machine Learning - Supervised Learning - Regression}{chapter.6}% 106
\BOOKMARK [1][-]{section.6.10}{Machine learning - Supervised Learning - Classification}{chapter.6}% 107
\BOOKMARK [2][-]{subsection.6.10.1}{Python SGD implementation and video}{section.6.10}% 108
\BOOKMARK [0][-]{chapter.7}{NLP Algorithms}{part.1}% 109
\BOOKMARK [1][-]{section.7.1}{Algorithms Introduction}{chapter.7}% 110
\BOOKMARK [1][-]{section.7.2}{1-Dimensional Algorithms}{chapter.7}% 111
\BOOKMARK [2][-]{subsection.7.2.1}{Golden Search Method - Derivative Free Algorithm}{section.7.2}% 112
\BOOKMARK [2][-]{subsection.7.2.2}{Bisection Method - 1st Order Method \(using Derivative\)}{section.7.2}% 113
\BOOKMARK [2][-]{subsection.7.2.3}{Gradient Descent - 1st Order Method \(using Derivative\)}{section.7.2}% 114
\BOOKMARK [2][-]{subsection.7.2.4}{Newton's Method - 2nd Order Method \(using Derivative and Hessian\)}{section.7.2}% 115
\BOOKMARK [1][-]{section.7.3}{Multi-Variate Unconstrained Optimizaition}{chapter.7}% 116
\BOOKMARK [2][-]{subsection.7.3.1}{Descent Methods - Unconstrained Optimization - Gradient, Newton}{section.7.3}% 117
\BOOKMARK [2][-]{subsection.7.3.2}{Stochastic Gradient Descent - The mother of all algorithms.}{section.7.3}% 118
\BOOKMARK [1][-]{section.7.4}{Constrained Convex Nonlinear Programming}{chapter.7}% 119
\BOOKMARK [2][-]{subsection.7.4.1}{Barrier Method}{section.7.4}% 120
\BOOKMARK [0][-]{chapter.8}{Computational Issues with NLP}{part.1}% 121
\BOOKMARK [1][-]{section.8.1}{Irrational Solutions}{chapter.8}% 122
\BOOKMARK [1][-]{section.8.2}{Discrete Solutions}{chapter.8}% 123
\BOOKMARK [1][-]{section.8.3}{Convex NLP Harder than LP}{chapter.8}% 124
\BOOKMARK [1][-]{section.8.4}{NLP is harder than IP}{chapter.8}% 125
\BOOKMARK [1][-]{section.8.5}{Karush-Huhn-Tucker \(KKT\) Conditions}{chapter.8}% 126
\BOOKMARK [1][-]{section.8.6}{Gradient Free Algorithms}{chapter.8}% 127
\BOOKMARK [2][-]{subsection.8.6.1}{Needler-Mead}{section.8.6}% 128
\BOOKMARK [0][-]{chapter.9}{Material to add...}{part.1}% 129
\BOOKMARK [1][-]{subsection.9.0.1}{Bisection Method and Newton's Method}{chapter.9}% 130
\BOOKMARK [1][-]{section.9.1}{Gradient Descent}{chapter.9}% 131
\BOOKMARK [1][-]{section.9.2}{Projection Gradient Methods}{chapter.9}% 132
